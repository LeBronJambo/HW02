import re
 
def checkIdcard(idcard):
  Errors = ['验证通过!', '身份证号码位数不对!', '身份证号码出生日期超出范围或含有非法字符!', '身份证号码校验错误!', '身份证地区非法!']
  area = {"11": "北京市", "12": "天津市", "13": "河北省", "14": "山西省", "15": "内蒙古自治区", "21": "辽宁省", "22": "吉林省", "23": "黑龙江省", "31": "上海市",
          "32": "江苏省", "33": "浙江省", "34": "安徽省", "35": "福建省", "36": "江西省", "37": "山东省", "41": "河南省", "42": "湖北省", "43": "湖南省",
          "44": "广东省", "45": "广西省", "46": "海南省", "50": "重庆市", "51": "四川省", "52": "贵州省", "53": "云南省", "54": "西藏藏族自治区", "61": "陕西省",
          "62": "甘肃省", "63": "青海省", "64": "宁夏回族自治区", "65": "新疆维吾尔族自治区", "71": "台湾省！", "81": "香港市区", "82": "澳门市", "91": "国外"}
  idcard = str(idcard)
  idcard = idcard.strip()
  idcard_list = list(idcard)
 
  key = idcard[0: 2] 
  if key in area.keys():
    if (not area[(idcard)[0:2]]):
        print(Errors[4])
  else:
    print(Errors[2])
  #15位身份证 
  if (len(idcard) == 15):
    if ((int(idcard[6:8]) + 1900) % 4 == 0 or (
          (int(idcard[6:8]) + 1900) % 100 == 0 and (int(idcard[6:8]) + 1900) % 4 == 0)):
      ereg = re.compile(
        '[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$')  # //测试出生日期的合法性
    else:
      ereg = re.compile(
        '[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$')  # //测试出生日期的合法性
    if (re.match(ereg, idcard)):
      print(Errors[0])
    else:
      print(Errors[2])
  # 18位身份
  elif (len(idcard) == 18):
  if (int(idcard[6:10]) % 4 == 0 or (int(idcard[6:10]) % 100 == 0 and int(idcard[6:10]) % 4 == 0)):
      ereg = re.compile(
        '[1-9][0-9]{5}(19[0-9]{2}|20[0-9]{2})((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$')  # //闰年出生日期的合法性正则表达式
    else:
      ereg = re.compile(
        '[1-9][0-9]{5}(19[0-9]{2}|20[0-9]{2})((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$')  # //平年出生日期的合法性正则表达式
    if (re.match(ereg, idcard)):
      S = (int(idcard_list[0]) + int(idcard_list[10])) * 7 + (int(idcard_list[1]) + int(idcard_list[11])) * 9 + (int(
        idcard_list[2]) + int(idcard_list[12])) * 10 + (int(idcard_list[3]) + int(idcard_list[13])) * 5 + (int(
        idcard_list[4]) + int(idcard_list[14])) * 8 + (int(idcard_list[5]) + int(idcard_list[15])) * 4 + (int(
        idcard_list[6]) + int(idcard_list[16])) * 2 + int(idcard_list[7]) * 1 + int(idcard_list[8]) * 6 + int(
        idcard_list[9]) * 3
      Y = S % 11
      M = "F"
      JYM = "10X98765432"
      M = JYM[Y]  
      if (M == idcard_list[17]):  
        print(Errors[0])
        place=idcard[0:2]
        birthplace=area[place]
        print("地址："+birthplace)
        year=idcard[6:10]    
        moon=idcard[10:12]    
        day=idcard[12:14]           
        print("生日: "+year+'年'+moon+'月'+day+'日')                
        if int(idcard[14:17])%2==0:
          print('性别：女')
        else:
          print('性别：男')
      else:
        print(Errors[3])
    else:
      print(Errors[2])
  else:
    print(Errors[1])
 
 
if __name__ == "__main__":
  while True:
    inputcard=input("请输入身份证号：")
    if inputcard == "exit":
      print("结束")
      break
    else:
      checkIdcard(inputcard)
